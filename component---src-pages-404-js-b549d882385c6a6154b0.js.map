{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/404.js","webpack:///./src/components/seo.js"],"names":["LocaleSwitcher","styled","div","withConfig","displayName","componentId","StyledLink","Link","React","createContext","state","deActive","enActive","handleClick","language","this","setState","render","_this2","react_default","a","createElement","gatsby_browser_entry","query","data","Fragment","data-name","onClick","className","hrefLang","to","props","children","_1044757290","PureComponent","propTypes","PropTypes","node","isRequired","NotFoundPage","seo","title","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","string","arrayOf","object"],"mappings":"2KAYMA,EAAiBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,sLAgBdK,EAAaL,YAAOM,KAAVJ,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,8FAWMO,IAAMC,qKAI1BC,MAAQ,CACNC,UAAU,EACVC,UAAU,yCAGZC,YAAA,SAAYC,GAEM,OAAbA,EACDC,KAAKC,SAAS,CACZL,UAAU,EACVC,UAAU,IAKZG,KAAKC,SAAS,CACZL,UAAU,EACVC,UAAU,OAOhBK,OAAA,WAAU,IAAAC,EAAAH,KAER,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,aASLN,OAAQ,SAACO,EAAMd,GAAP,OACNS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACAN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KAEIN,EAAAC,EAAAC,cAACrB,EAAD,CAAgB0B,YAAU,mBACxBP,EAAAC,EAAAC,cAACf,EAAD,CAAYqB,QAAS,WAAOT,EAAKL,YAAY,OAAQe,UAAaV,EAAKR,MAAMC,SAAW,kBAAoB,GAAKkB,SAAS,QAAQC,GAAI,kBAAtI,MAGAX,EAAAC,EAAAC,cAACf,EAAD,CAAYqB,QAAS,WAAOT,EAAKL,YAAY,OAAQe,UAAaV,EAAKR,MAAME,SAAW,kBAAoB,GAAKiB,SAAS,QAAQC,GAAI,qBAAtI,OAKDZ,EAAKa,MAAMC,YAvBpBR,KAAAS,QA7BezB,IAAM0B,gBAgEpBC,UAAY,CACjBH,SAAUI,IAAUC,KAAKC,yBC7FZC,UARM,kBACnBpB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAK,SAAA,KACEN,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAKC,MAAM,mBACXtB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uKCGJ,SAASqB,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUN,EAASE,EAATF,MACxCO,EADiDC,EAAAzB,KACjDwB,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACEQ,EAAAhC,EAAAC,cAACgC,EAAAjC,EAAD,CACEkC,eAAgB,CACdT,QAEFJ,MAAOA,EAEPc,cAAe,qCACfT,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAShB,GAEX,CACEe,KAAI,sBACJC,QAASP,IAGVU,OACCb,EAASc,OAAS,EACd,CACEL,KAAI,WACJC,QAASV,EAASe,KAAT,OAEX,IAELF,OAAOd,KAKhBJ,EAAIqB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbF,EAAIP,UAAY,CACdS,YAAaR,IAAU4B,OACvBnB,KAAMT,IAAU4B,OAChBlB,KAAMV,IAAU6B,QAAQ7B,IAAU8B,QAClCnB,SAAUX,IAAU6B,QAAQ7B,IAAU4B,QACtCvB,MAAOL,IAAU4B,OAAO1B,YAGXI","file":"component---src-pages-404-js-b549d882385c6a6154b0.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst LocaleSwitcher = styled.div`\n  position: fixed;\n  font-family: 'Calibre-Regular';\n  font-size: 24px;\n  display: flex;\n  flex-direction: column;\n  bottom: 0;\n  left: 0;\n  padding: 1rem;\n  z-index: 999;\n\n  @media(min-width: 992px) {\n    font-size: 34px;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  color: blue;\n  text-decoration: none;\n  margin-top: 5px;\n\n  @media(min-width: 992px) {\n    margin-top: 15px;\n  }\n`\n\n\nconst LocaleContext = React.createContext()\n\nclass Layout extends React.PureComponent {\n\n  state = {\n    deActive: true,\n    enActive: false,\n  }\n\n  handleClick(language) {\n\n    if(language === 'de') {\n      this.setState({\n        deActive: true,\n        enActive: false\n      });\n\n\n    } else {\n      this.setState({\n        deActive: false,\n        enActive: true\n      })\n\n    }\n\n  }\n\n  render () {\n\n    return(\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={(data, state) => (\n          <>\n          <>\n    \n              <LocaleSwitcher data-name=\"locale-switcher\">\n                <StyledLink onClick={() => {this.handleClick('de')}} className = {this.state.deActive ? 'active-language' : ''}  hrefLang=\"de-de\" to={\"/ziegertreport\"}>\n                  DE\n                </StyledLink>\n                <StyledLink onClick={() => {this.handleClick('en')}} className = {this.state.enActive ? 'active-language' : ''}  hrefLang=\"en-gb\" to={\"/en/ziegertreport\"}>\n                  EN\n                </StyledLink>\n              </LocaleSwitcher>\n    \n              {this.props.children}\n    \n          </>\n          </>\n        )}\n      />)\n\n  }\n  }\n\nexport { LocaleContext, Layout }\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      // titleTemplate={`%s | ${site.siteMetadata.title}`}\n      titleTemplate={'Karl Anders â€” Real Estate Branding'}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}