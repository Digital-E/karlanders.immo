{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Header","props","_React$Component","call","this","componentWillMount","render","react_default","React","Component","siteTitle","Layout","children","gatsby_browser_entry","query","Fragment","header","style","position","top","height","width","backgroundColor","zIndex","Date","getFullYear","href","_755544856","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAaeS,UAPI,kBACjBL,EAAAM,EAAAC,cAACJ,EAAA,EAAD,KACEH,EAAAM,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,aACXR,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAMO,GAAG,KAAT,iNCGJ,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUP,EAASG,EAATH,MACxCQ,EADiDC,EAAAC,KACjDF,KAcFG,EAAkBP,GAAeI,EAAKI,aAAaR,YAEzD,OACES,EAAAf,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,eAAgB,CACdV,QAEFL,MAAOA,EACPgB,cAAa,QAAUR,EAAKI,aAAaZ,MACzCM,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASlB,GAEX,CACEmB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASlB,GAEX,CACEiB,KAAI,sBACJC,QAASP,IAGVU,OACCd,EAASe,OAAS,EACd,CACEL,KAAI,WACJC,QAASX,EAASgB,KAAT,OAEX,IAELF,OAAOf,KAKhBJ,EAAIsB,aAAe,CACjBnB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbF,EAAIuB,UAAY,CACdrB,YAAasB,IAAUC,OACvBtB,KAAMqB,IAAUC,OAChBrB,KAAMoB,IAAUE,QAAQF,IAAUG,QAClCtB,SAAUmB,IAAUE,QAAQF,IAAUC,QACtC3B,MAAO0B,IAAUC,OAAOG,YAGX5B,2XC5FT6B,cACJ,SAAAA,EAAYC,GAAM,OAChBC,EAAAC,KAAAC,KAAMH,IADUG,yCAKlBC,mBAAA,eAKAC,OAAA,WAEE,OACEC,EAAAxC,EAAAC,cAAA,mBAdewC,IAAMC,WAqB3BT,EAAON,UAAY,CACjBgB,UAAWf,IAAUC,QAGvBI,EAAOP,aAAe,CACpBiB,UAAS,IAGIV,QCrBTW,SAAS,SAAAvC,GAAA,IAAGwC,EAAHxC,EAAGwC,SAAH,OACbL,EAAAxC,EAAAC,cAAC6C,EAAA,EAAD,CACEC,MAAK,YASLR,OAAQ,SAAA3B,GAAI,OACV4B,EAAAxC,EAAAC,cAAAuC,EAAAxC,EAAAgD,SAAA,KACER,EAAAxC,EAAAC,cAACgD,EAAD,CAAQN,UAAW/B,EAAKF,KAAKI,aAAaZ,QAC1CsC,EAAAxC,EAAAC,cAAA,OACEiD,MAAO,CACLC,SAAU,WACVC,IAAK,EACLC,OAAQ,QACRC,MAAO,QACPC,gBAAiB,QACjBC,OAAQ,IAGVhB,EAAAxC,EAAAC,cAAA,YAAO4C,GACPL,EAAAxC,EAAAC,cAAA,oBACK,IAAIwD,MAAOC,cADhB,mBAGElB,EAAAxC,EAAAC,cAAA,KAAG0D,KAAK,4BAAR,cA3BV/C,KAAAgD,MAmCFhB,EAAOjB,UAAY,CACjBkB,SAAUjB,IAAUiC,KAAK7B,YAGZY","file":"component---src-pages-page-2-js-3d0a8fafd2e1804d3ed7.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\n\n\nclass Header extends React.Component {\n  constructor(props){\n    super(props);\n\n  }\n\n  componentWillMount(){\n    \n  }\n\n\n  render() {\n\n    return (\n      <header>\n\n      </header>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            height: '100vh',\n            width: '100vw',\n            backgroundColor: 'black',\n            zIndex: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}