{"version":3,"sources":["webpack:///./src/pages/indexsave.js"],"names":["Information","styled","div","withConfig","displayName","componentId","props","color","Title","h1","Text","p","Transition","posed","enter","opacity","transition","duration","ease","exit","IndexPage","_this","_React$Component","call","this","state","fetchedPages","componentWillMount","setState","data","allPrismicPage","edges","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","keywords","map","item","Fragment","node","image_gallery","image","index","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","key","fluid","localFile","childImageSharp","text","_components_logo__WEBPACK_IMPORTED_MODULE_4__","React","Component","query"],"mappings":"oOASMA,EAAcC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,mJACK,SAAAK,GAAK,OAAIA,EAAMC,QAW/BC,EAAQP,IAAOQ,GAAVN,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,yEAOLS,EAAOT,IAAOU,EAAVR,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,yFAQJW,EAAaC,IAAMX,IAAI,CAC3BY,MAAO,CACLC,QAAS,EACTC,WAAY,CACVC,SAAU,IACVC,KAAM,cAGRC,KAAM,CACJJ,QAAS,EACXC,WAAY,CACVC,SAAU,IACVC,KAAM,gBAONE,cACJ,SAAAA,EAAYd,GAAM,IAAAe,EAAA,OAChBA,EAAAC,EAAAC,KAAAC,KAAMlB,IAANkB,MACKC,MAAQ,CACXC,aAAc,MAHAL,sCAOlBM,mBAAA,WACEH,KAAKI,SAAS,CACZF,aAAcF,KAAKlB,MAAMuB,KAAKC,eAAeC,WAKjDC,OAAA,WAAQ,IAEDN,EAAgBF,KAAKC,MAArBC,aAEL,OAEEO,EAAAC,EAAAC,cAACvB,EAAD,KAEAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,mCAE1BZ,EAAaa,IAAI,SAACC,GAChB,OACEP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAO,SAAA,KACGD,EAAKE,KAAKb,KAAKc,cAAcJ,IAAI,SAACK,EAAOC,GACxC,OAAOZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAKa,IAAKF,EAAOG,MAAOJ,EAAMA,MAAMK,UAAUC,gBAAgBF,UAIzEf,EAAAC,EAAAC,cAACnC,EAAD,CAAaO,MAAK,GAAKiC,EAAKE,KAAKb,KAAKtB,OACpC0B,EAAAC,EAAAC,cAAC3B,EAAD,KAAQgC,EAAKE,KAAKb,KAAKQ,MAAMc,MAC7BlB,EAAAC,EAAAC,cAACzB,EAAD,KAAO8B,EAAKE,KAAKb,KAAKsB,KAAKA,UAMjClB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,WAzCgBC,IAAMC,WA+CflC,YAER,IAAMmC,EAAK","file":"component---src-pages-indexsave-js-86d9040926f1ab9b7ae7.js","sourcesContent":["import React from \"react\"\nimport { Redirect } from '@reach/router'\nimport Img from 'gatsby-image'\nimport Logo from \"../components/logo\"\nimport styled from \"styled-components\"\nimport posed from \"react-pose\"\n\nimport SEO from \"../components/seo\"\n\nconst Information = styled.div`\n  background-color: ${props => props.color};\n  font-family: 'Calibre-Regular';\n  color: white;\n  height: 100%;\n  position: relative;\n  z-index: 990;\n\n  @media(min-width: 992px) {\n    height: 100%;\n  }\n`\nconst Title = styled.h1`\n  font-size: 48px;\n  margin-left: 25px;\n  margin-right: 25px;\n  padding-top: 25px;\n`\n\nconst Text = styled.p`\n  font-size: 24px;\n  margin-left: 25px;\n  margin-right: 25px;\n  padding-top: 25px;\n  max-width: 800px;\n`\n\nconst Transition = posed.div({\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 600,\n      ease: 'easeInOut'\n      }\n  },\n    exit: { \n      opacity: 0,\n    transition: {\n      duration: 600,\n      ease: 'easeInOut'\n      },\n      \n  },\n})\n\n\nclass IndexPage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fetchedPages: null\n    }\n  }\n\n  componentWillMount(){\n    this.setState({\n      fetchedPages: this.props.data.allPrismicPage.edges\n    })\n\n  }\n\n  render(){\n\n    let {fetchedPages} = this.state;\n\n    return(\n  \n      <Transition>\n      {/* <Redirect noThrow to=\"/\" /> */}\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n      {\n        fetchedPages.map((item) => {\n          return(\n            <>\n              {item.node.data.image_gallery.map((image, index) => {\n                return <Img key={index} fluid={image.image.localFile.childImageSharp.fluid} />\n                // <img key={index} src={image.image.url} />\n              }\n            )}\n            <Information color={`${item.node.data.color}`}>\n              <Title>{item.node.data.title.text}</Title>\n              <Text>{item.node.data.text.text}</Text>\n            </Information>\n            </>\n          )\n        })\n      }\n        <Logo/>\n      </Transition>\n    )\n  }\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n{\n  allPrismicPage {\n    edges {\n      node {\n        id\n        uid\n        data {\n          title {\n            text\n          }\n          text {\n            text\n          }\n          color\n          image_gallery {\n            image {\n              alt\n              url\n              localFile {\n                childImageSharp {\n                  fluid(maxWidth: 1500) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}